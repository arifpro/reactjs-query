{"version":3,"sources":["components/Navbar.js","api/index.js","components/Planets.js","components/People.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","setPage","onClick","API_URL","fetchPeople","a","fetch","res","json","fetchPlanets","page","Planets","useState","useQuery","keepPreviousData","isLoading","isFetching","isError","isSuccess","data","isPreviousData","style","marginLeft","old","Math","max","disabled","next","results","map","planet","className","name","population","terrain","People","person","gender","birth_year","queryClient","QueryClient","App","QueryClientProvider","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MASeA,EATA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,OACE,gCACE,wBAAQC,QAAS,kBAAMD,EAAQ,YAA/B,qBACA,wBAAQC,QAAS,kBAAMD,EAAQ,UAA/B,wB,gCCJOE,EAAU,uBAEVC,EAAW,uCAAG,4BAAAC,EAAA,sEACPC,MAAM,GAAD,OAAIH,EAAJ,YADE,cACnBI,EADmB,yBAElBA,EAAIC,QAFc,2CAAH,qDAKXC,EAAY,uCAAG,WAAOC,GAAP,eAAAL,EAAA,sEACRC,MAAM,GAAD,OAAIH,EAAJ,0BAA6BO,IAD1B,cACpBH,EADoB,yBAEnBA,EAAIC,QAFe,2CAAH,sDCqDVG,EAxDC,WAAO,IAAD,IACIC,mBAAS,GADb,mBACbF,EADa,KACPT,EADO,OAUhBY,YAAS,CAAC,UAAWH,IAAO,kBAAMD,EAAaC,KAAO,CACxDI,kBAAkB,IAPlBC,EAJkB,EAIlBA,UACAC,EALkB,EAKlBA,WACAC,EANkB,EAMlBA,QACAC,EAPkB,EAOlBA,UACAC,EARkB,EAQlBA,KACAC,EATkB,EASlBA,eAKF,OACE,oCACE,oBAAIC,MAAO,CAAEC,WAAY,QAAzB,qBAECP,GAAa,+CAEbE,GAAW,sDAEXC,GACC,qCACE,wBACEhB,QAAS,kBAAMD,GAAQ,SAACsB,GAAD,OAASC,KAAKC,IAAIF,EAAM,EAAG,OAClDG,SAAmB,IAAThB,EAFZ,2BAMA,+BAAOA,IACP,wBACER,QAAS,kBACNkB,GAAkBD,EAAKQ,MAAQ1B,GAAQ,SAACsB,GAAD,OAASA,EAAM,MAGzDG,SAAUN,IAAmBD,EAAKQ,KALpC,uBASA,yCACGR,EAAKS,eADR,aACG,EAAcC,KAAI,SAACC,GAAD,OACjB,0BAASC,UAAU,OAAnB,UACE,6BAAKD,EAAOE,OACZ,8CAAiBF,EAAOG,cACxB,2CAAcH,EAAOI,aAHQJ,EAAOE,WAOzChB,EAAa,+CAA2B,YCrBpCmB,EA7BA,WAAO,IAAD,EAC6BtB,YAC9C,SACAT,GAFMe,EADW,EACXA,KAAMJ,EADK,EACLA,UAAWE,EADN,EACMA,QAASC,EADf,EACeA,UAKlC,OACE,oCACE,oBAAIG,MAAO,CAAEC,WAAY,QAAzB,oBAECP,GAAa,+CAEbE,GAAW,sDAEXC,GACC,+BACGC,EAAKS,QAAQC,KAAI,SAACO,GAAD,OAChB,0BAASL,UAAU,OAAnB,UACE,6BAAKK,EAAOJ,OACZ,0CAAaI,EAAOC,UACpB,8CAAiBD,EAAOE,gBAHKF,EAAOJ,e,gBCZ5CO,EAAc,IAAIC,IAwBTC,EAtBH,WAAO,IAAD,EACM7B,mBAAS,WADf,mBACXF,EADW,KACLT,EADK,KAGhB,OACE,mCACE,0BAAS8B,UAAU,MAAnB,UACE,gDAEA,cAAC,EAAD,CAAQ9B,QAASA,IAEjB,sBAAM8B,UAAU,UAAhB,SACE,cAACW,EAAA,EAAD,CAAqBC,OAAQJ,EAA7B,SACY,YAAT7B,EAAqB,cAAC,EAAD,IAAc,cAAC,EAAD,cCVjCkC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.71ad2d08.chunk.js","sourcesContent":["const Navbar = ({ setPage }) => {\n  return (\n    <nav>\n      <button onClick={() => setPage(\"planets\")}>Planets</button>\n      <button onClick={() => setPage(\"chars\")}>People</button>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","export const API_URL = \"http://swapi.dev/api\";\n\nexport const fetchPeople = async () => {\n  const res = await fetch(`${API_URL}/people`);\n  return res.json();\n};\n\nexport const fetchPlanets = async (page) => {\n  const res = await fetch(`${API_URL}/planets/?page=${page}`);\n  return res.json();\n};\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { fetchPlanets } from \"../api\";\n\nconst Planets = () => {\n  const [page, setPage] = useState(1);\n\n  const {\n    isLoading,\n    isFetching,\n    isError,\n    isSuccess,\n    data,\n    isPreviousData,\n  } = useQuery([\"planets\", page], () => fetchPlanets(page), {\n    keepPreviousData: true,\n  });\n\n  return (\n    <section>\n      <h2 style={{ marginLeft: \"1rem\" }}>Planets</h2>\n\n      {isLoading && <div>Loading data</div>}\n\n      {isError && <div>Error fetching data</div>}\n\n      {isSuccess && (\n        <>\n          <button\n            onClick={() => setPage((old) => Math.max(old - 1, 1))}\n            disabled={page === 1}\n          >\n            Previous Page\n          </button>\n          <span>{page}</span>\n          <button\n            onClick={() =>\n              !isPreviousData && data.next && setPage((old) => old + 1)\n            }\n            // Disable the Next Page button until we know a next page is available\n            disabled={isPreviousData || !data.next}\n          >\n            Next page\n          </button>\n          <main>\n            {data.results?.map((planet) => (\n              <section className=\"card\" key={planet.name}>\n                <h3>{planet.name}</h3>\n                <p>Population - {planet.population}</p>\n                <p>Terrain - {planet.terrain}</p>\n              </section>\n            ))}\n          </main>\n          {isFetching ? <span> Loading...</span> : null}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Planets;\n","import { useQuery } from \"react-query\";\nimport { fetchPeople } from \"../api\";\n\nconst People = () => {\n  const { data, isLoading, isError, isSuccess } = useQuery(\n    \"people\",\n    fetchPeople\n  );\n\n  return (\n    <section>\n      <h2 style={{ marginLeft: \"1rem\" }}>People</h2>\n\n      {isLoading && <div>Loading data</div>}\n\n      {isError && <div>Error fetching data</div>}\n\n      {isSuccess && (\n        <main>\n          {data.results.map((person) => (\n            <section className=\"card\" key={person.name}>\n              <h3>{person.name}</h3>\n              <p>Gender - {person.gender}</p>\n              <p>Birth year - {person.birth_year}</p>\n            </section>\n          ))}\n        </main>\n      )}\n    </section>\n  );\n};\n\nexport default People;\n","import { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Planets from \"./components/Planets\";\nimport People from \"./components/People\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n// import { ReactQueryDevtools } from \"react-query-devtools\";\n\n// create a client for react-query\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  let [page, setPage] = useState(\"planets\");\n\n  return (\n    <>\n      <section className=\"App\">\n        <h1>Star Wars Info</h1>\n\n        <Navbar setPage={setPage} />\n\n        <main className=\"content\">\n          <QueryClientProvider client={queryClient}>\n            {page === \"planets\" ? <Planets /> : <People />}\n          </QueryClientProvider>\n        </main>\n      </section>\n\n      {/* <ReactQueryDevtools initialIsOpen={false} /> */}\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}